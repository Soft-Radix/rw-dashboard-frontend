name: RCW-frontend deploy on server

on:
  push:
    branches:
      - develop

jobs:
  build-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Creating env file
        env:
          ENV_VARIABLE: ${{ secrets.DEV_FRONTEND_ENV }}
        run: |
          echo "${ENV_VARIABLE}" >> .env

      - name: Create a build
        env:
          CI: false
        run: npm run build

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/rcw-frontend .
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/rcw-frontend


  deploy:
    runs-on: ubuntu-latest
    needs: build-push

    steps:
      - name: SSH to Instance
        env:
          HOSTNAME: ${{ secrets.RCW_SSH_HOST }}
          USER_NAME: ${{ secrets.RCW_USER_NAME }}
        run: |
          echo "${{ secrets.RCW_SSH_PRIVATEKEY }}" > my-ssh-key.pem
          chmod 400 my-ssh-key.pem
          ssh -o StrictHostKeyChecking=no -i my-ssh-key.pem $USER_NAME@${HOSTNAME} '
          set -e
          sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/rcw-frontend
          echo "deleting existing container if any"
          bash /home/ubuntu/scripts/frontend.bash
          UNIQUE_ID=$(date +%s)
          CONTAINER_NAME="rcw-frontend-${UNIQUE_ID}"
          echo "Starting Docker container..."
          sudo docker run -d --name $CONTAINER_NAME -p 81:80 ${{ secrets.DOCKER_USERNAME }}/rcw-frontend
          echo "Docker container started......."
          echo "Deleting old image and container"
          sudo docker system prune -a --force
          echo "Deleted"
          '

